plugins {
    id 'application'
    id 'org.openjfx.javafxplugin' version '0.0.9'
}

repositories {
    mavenCentral()
}

dependencies {
    testCompile 'junit:junit:4.12'
    testImplementation 'org.hamcrest:hamcrest-core:1.3'
    // https://mvnrepository.com/artifact/com.google.code.gson/gson
    compile group: 'com.google.code.gson', name: 'gson', version: '2.8.6'
    //compile group: 'org.controlsfx', name: 'controlsfx', version: '8.0.5'
    // https://mvnrepository.com/artifact/com.jfoenix/jfoenix
    compile 'com.jfoenix:jfoenix:9.0.10'

    // https://mvnrepository.com/artifact/org.apache.httpcomponents/httpclient
    implementation group: 'org.apache.httpcomponents', name: 'httpclient', version: '4.5.13'
// https://mvnrepository.com/artifact/org.apache.httpcomponents/httpmime
    implementation group: 'org.apache.httpcomponents', name: 'httpmime', version: '4.5.13'

}

javafx {
    version = "15"
    modules = [ 'javafx.controls', 'javafx.fxml' ]
}

mainClassName = 'ru.nsu.fit.traffic.App'

jar {
    manifest {
        attributes(
                'Main-Class': 'ru.nsu.fit.traffic.Launcher'
        )
    }
    from {
        configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
    }
}

run{
    jvmArgs = [
            "--add-exports=javafx.controls/com.sun.javafx.scene.control.behavior=ALL-UNNAMED",
            "--add-exports=javafx.base/com.sun.javafx.binding=ALL-UNNAMED",
            "--add-exports=javafx.base/com.sun.javafx.event=ALL-UNNAMED",
            "--add-exports=javafx.graphics/com.sun.javafx.stage=ALL-UNNAMED",
            "--illegal-access=warn"
    ]
}